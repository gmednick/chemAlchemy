<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Gabe Mednick</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Gabe Mednick 2020</copyright><lastBuildDate>Thu, 03 Sep 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Blog</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Hello Tidyverse and Tidymodels</title>
      <link>/post/hello-tidyverse/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/hello-tidyverse/</guid>
      <description>


&lt;div id=&#34;intro&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;This dataset was made available by the TidyTuesday project on the first of September, 2020. There are five related datasets in total but we will only look at &lt;code&gt;key_crop_yields&lt;/code&gt; in this exploration. The data contains crop yield by country and year. Let’s get started by loading the packages that we will need for this analysis.&lt;/p&gt;
&lt;p&gt;Next up, let’s download the data from the R4DS Github account and take a look at it. There is the wonderful package, tidytuesdayR by Ellis Hughes, for loading and exploring the TidyTuesday data but today I will use the readr package from the tidyverse since we are only going to look at the crop yields dataset. &lt;code&gt;read_csv&lt;/code&gt; will load the data as modern data frame called a tibble.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Load the data with a readr function
crop_yields &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv&amp;quot;)

# The skim function provides a great way to get an initial summary. I typically use View() as well to view the dataset in Rstudio
# skimr::skim(crop_yields)
glimpse(crop_yields)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 13,075
## Columns: 14
## $ Entity                             &amp;lt;chr&amp;gt; &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanis…
## $ Code                               &amp;lt;chr&amp;gt; &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AF…
## $ Year                               &amp;lt;dbl&amp;gt; 1961, 1962, 1963, 1964, …
## $ `Wheat (tonnes per hectare)`       &amp;lt;dbl&amp;gt; 1.0220, 0.9735, 0.8317, …
## $ `Rice (tonnes per hectare)`        &amp;lt;dbl&amp;gt; 1.5190, 1.5190, 1.5190, …
## $ `Maize (tonnes per hectare)`       &amp;lt;dbl&amp;gt; 1.4000, 1.4000, 1.4260, …
## $ `Soybeans (tonnes per hectare)`    &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, …
## $ `Potatoes (tonnes per hectare)`    &amp;lt;dbl&amp;gt; 8.6667, 7.6667, 8.1333, …
## $ `Beans (tonnes per hectare)`       &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, …
## $ `Peas (tonnes per hectare)`        &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, …
## $ `Cassava (tonnes per hectare)`     &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, …
## $ `Barley (tonnes per hectare)`      &amp;lt;dbl&amp;gt; 1.0800, 1.0800, 1.0800, …
## $ `Cocoa beans (tonnes per hectare)` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, …
## $ `Bananas (tonnes per hectare)`     &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, …&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(crop_yields)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Entity              Code                Year     
##  Length:13075       Length:13075       Min.   :1961  
##  Class :character   Class :character   1st Qu.:1976  
##  Mode  :character   Mode  :character   Median :1991  
##                                        Mean   :1990  
##                                        3rd Qu.:2005  
##                                        Max.   :2018  
##                                                      
##  Wheat (tonnes per hectare) Rice (tonnes per hectare)
##  Min.   : 0.000             Min.   : 0.203           
##  1st Qu.: 1.228             1st Qu.: 1.767           
##  Median : 1.990             Median : 2.744           
##  Mean   : 2.435             Mean   : 3.162           
##  3rd Qu.: 3.124             3rd Qu.: 4.157           
##  Max.   :10.668             Max.   :10.683           
##  NA&amp;#39;s   :4974               NA&amp;#39;s   :4604             
##  Maize (tonnes per hectare) Soybeans (tonnes per hectare)
##  Min.   : 0.0343            Min.   :0.005                
##  1st Qu.: 1.1423            1st Qu.:0.860                
##  Median : 1.8251            Median :1.334                
##  Mean   : 3.0245            Mean   :1.449                
##  3rd Qu.: 3.9220            3rd Qu.:1.905                
##  Max.   :36.7619            Max.   :5.947                
##  NA&amp;#39;s   :2301               NA&amp;#39;s   :7114                 
##  Potatoes (tonnes per hectare) Beans (tonnes per hectare)
##  Min.   : 0.8406               Min.   :0.027             
##  1st Qu.: 8.6383               1st Qu.:0.586             
##  Median :13.4144               Median :0.832             
##  Mean   :15.3977               Mean   :1.086             
##  3rd Qu.:20.0521               3rd Qu.:1.346             
##  Max.   :75.2987               Max.   :9.178             
##  NA&amp;#39;s   :3059                  NA&amp;#39;s   :5066              
##  Peas (tonnes per hectare) Cassava (tonnes per hectare)
##  Min.   :0.044             Min.   : 1.000              
##  1st Qu.:0.723             1st Qu.: 5.553              
##  Median :1.146             Median : 8.667              
##  Mean   :1.480             Mean   : 9.345              
##  3rd Qu.:1.992             3rd Qu.:11.989              
##  Max.   :7.164             Max.   :38.582              
##  NA&amp;#39;s   :6840              NA&amp;#39;s   :5887                
##  Barley (tonnes per hectare) Cocoa beans (tonnes per hectare)
##  Min.   :0.094               Min.   :0.000                   
##  1st Qu.:1.047               1st Qu.:0.244                   
##  Median :1.877               Median :0.363                   
##  Mean   :2.232               Mean   :0.395                   
##  3rd Qu.:3.024               3rd Qu.:0.487                   
##  Max.   :9.146               Max.   :3.429                   
##  NA&amp;#39;s   :6342                NA&amp;#39;s   :8466                    
##  Bananas (tonnes per hectare)
##  Min.   : 0.664              
##  1st Qu.: 5.944              
##  Median :11.775              
##  Mean   :15.201              
##  3rd Qu.:20.791              
##  Max.   :77.592              
##  NA&amp;#39;s   :4166&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-cleaning-and-reshaping&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data cleaning and reshaping&lt;/h1&gt;
&lt;p&gt;It’s time for a little data cleaning! For starters, we can see from the skimr summary that there are a bunch of NAs that we need to decide what to do with. We can also standarize our feature names with the janitor package. We should also consider whether our data is in a tidy format where each column is a feature and each row a sample since this is fundamental necessity for working with data in the tidyverse and tidymodels frameworks. In our data example, the various crops on samples, that can be categorized as the feature &lt;code&gt;crops&lt;/code&gt;. The function &lt;code&gt;pivot_longer&lt;/code&gt; is fantastic function from the tidyr package that allows us to reshape our data and preparing it for This will benefit our downstream analysis, including EDA (exploratory data analysis) and modeling (machine learning).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;crop_yields %&amp;gt;% count(Year)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 58 x 2
##     Year     n
##    &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
##  1  1961   209
##  2  1962   209
##  3  1963   209
##  4  1964   209
##  5  1965   209
##  6  1966   211
##  7  1967   211
##  8  1968   213
##  9  1969   213
## 10  1970   213
## # … with 48 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Use janitor package to clean column names and pivot_longer from tidyr to tidy the data.
crop_yield_tidy &amp;lt;- crop_yields %&amp;gt;% 
  janitor::clean_names() %&amp;gt;% 
  rename_all(str_remove, &amp;quot;_tonnes.*&amp;quot;) %&amp;gt;% 
  rename(country = entity) %&amp;gt;% 
  pivot_longer(wheat:bananas, names_to = &amp;#39;crop&amp;#39;, values_to = &amp;#39;yield_hectare&amp;#39;) %&amp;gt;% 
  drop_na(yield_hectare)

kable(head(crop_yield_tidy, n = 10))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;country&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;year&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;crop&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;yield_hectare&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wheat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0220&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rice&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.5190&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;maize&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;potatoes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.6667&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;barley&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1962&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wheat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9735&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1962&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rice&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.5190&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1962&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;maize&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1962&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;potatoes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.6667&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AFG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1962&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;barley&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0800&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;visual-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visual analysis&lt;/h1&gt;
&lt;p&gt;Now that we have the data in tidy format, let’s see what we can learn from it. We want to look at crop production by country but there are too many countries to look at all of them at once. &lt;code&gt;slice_sample()&lt;/code&gt; can be used to randomly select a subset of the total countries. A seed can be set if you want &lt;code&gt;slice_sample&lt;/code&gt; to return the same 8 countries each time. We will use the results to visualize a subset of the countries with the idea that this will help us understand our data better and generate questions that can guide our predictive modeling.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Randomly select 4 country codes
# set.seed(1014)
country_random &amp;lt;- crop_yield_tidy %&amp;gt;% 
  select(country) %&amp;gt;% 
  distinct() %&amp;gt;% 
  slice_sample(n = 9) %&amp;gt;% 
  pull()

# another option would be to set the code equal to a set selection of countries: E.g., countries &amp;lt;- c(&amp;#39;GUM&amp;#39;,    &amp;#39;IND&amp;#39;,  &amp;#39;YEM&amp;#39;,  &amp;#39;NAM&amp;#39;,  &amp;#39;URY&amp;#39;, &amp;#39;USA&amp;#39;)

# Plot crop yield per hectare.
library(tidytext)
column_plot &amp;lt;- crop_yield_tidy %&amp;gt;% 
  filter(year &amp;gt;= 2000,
         country == country_random) %&amp;gt;% 
  mutate(crop = reorder_within(crop, yield_hectare, country)) %&amp;gt;%
  ggplot(aes(yield_hectare, crop, fill = crop)) +
  geom_col()  +
  facet_wrap(~country, scales = &amp;#39;free&amp;#39;) +
  theme(legend.position =  &amp;#39;none&amp;#39;) +
  scale_y_reordered() +
  labs(
    title = &amp;#39;Crop Yield&amp;#39;,
    y = &amp;#39;Crop&amp;#39;,
    x = &amp;#39;yield per hectare&amp;#39;
  )
column_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-03-hello-tidyverse/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;2400&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Plot crop yield per hectare per year.
line_plot &amp;lt;- crop_yield_tidy %&amp;gt;% 
  filter(year &amp;gt;= 2000,
         country == country_random) %&amp;gt;% 
  mutate(crop = fct_reorder(crop, yield_hectare)) %&amp;gt;% 
  ggplot(aes(year, yield_hectare, color = crop)) +
  geom_line() +
  facet_wrap(~country, scales = &amp;#39;free_y&amp;#39;) +
  labs(
     y = &amp;#39;yield per hectare&amp;#39;,
    title = &amp;#39;Crop Yield&amp;#39;
  )
line_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-03-hello-tidyverse/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;2400&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Plot crop yield per hectare per year.
box_plot &amp;lt;- crop_yield_tidy %&amp;gt;% 
  filter(year &amp;gt;= 2000,
         country == country_random) %&amp;gt;% 
  mutate(crop = fct_reorder(crop, yield_hectare)) %&amp;gt;% 
  ggplot(aes(yield_hectare, crop, color = crop)) +
  geom_boxplot() +
  theme(legend.position =  &amp;#39;none&amp;#39;) +
  facet_wrap(~country, scales = &amp;#39;free&amp;#39;) +
  labs(
    x = &amp;#39;Yield&amp;#39;,
    title = &amp;#39;Crop Yield&amp;#39;,
    y = &amp;#39;&amp;#39;
  )
box_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-03-hello-tidyverse/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;2400&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
