deaths = sum(deaths),
population = sum(population)
) %>%
ungroup()
us_totals <- us_state %>%
group_by(state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
filter(cases > 0) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
county_filter <- tibble(unique(usmap::us_map(regions = "counties")$county)) %>%
select(county = `unique(usmap::us_map(regions = "counties")$county)`) %>%
mutate(county = str_remove_all(county, " County"))
us_counties <- us_data %>%
group_by(county, state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup() %>%
group_by(county, state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
ungroup() %>%
filter(cases > 0,
county %in% county_filter$county) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield County')
library(gganimate)
library(transformr)
us_monthly <- us_state %>%
mutate(month = month(date)) %>%
#  filter(month >= 9) %>%
group_by(state, month) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
filter(cases > 0) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6))
p <- plot_usmap(
data = us_monthly,
values = "cases_per_1e6",
color = "black") +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = paste0("Cases by County")) +
scale_fill_viridis_c(
name = "Cases by Month",
alpha = 0.5
)
p <- p + transition_time(as.integer(month)) +
labs(title = "Month: {frame_time}")
animate(p, fps=10,  end_pause = 20)
us_total_sums <- us_data %>%
group_by(date) %>%
summarize(
total_cases = sum(cases),
total_deaths = sum(deaths)
)
daily_summary <- us_data %>%
group_by(state, date) %>%
summarise(
cases_n = sum(cases),
deaths_n = sum(deaths)
) %>%
mutate(
new_cases_n = cases_n - lag(cases_n, default = 0),
new_deaths_n = deaths_n - lag(deaths_n, default = 0)
) %>%
ungroup() %>%
group_by(state) %>%
slice(which.max(date)) %>%
summarise(total_new_cases = sum(new_cases_n),
total_new_death = sum(new_deaths_n)) %>%
ungroup()
# Cases per million by county
county_map <- plot_usmap(
data = us_counties,
exclude = "AK",
values = "cases_per_1e6",
color = "black",
size = 0.1) +
ggplot2::aes(text = paste0(
"County: ", county,
"\nPopulation: ", format(population, big.mark = ","),
"\nTotal cases: ", format(cases, big.mark = ","),
"\nCases per mill: ", format(round(cases_per_1e6, 0), big.mark = ",")
)) +
scale_fill_viridis_c(
name = "Cases per million",
alpha = 0.35
) +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = paste0("Cases by County"))
ggplotly(county_map,
tooltip = "text"
) %>%
config(displayModeBar = FALSE)
ca_map <- plot_usmap(
data = us_counties, values = "cases_per_1e6", include = c("CA"), color = "black",
size = 0.1) +
ggplot2::aes(text = paste0(
"State: ", county,
"\nPopulation: ", format(population, big.mark = ","),
"\nTotal cases: ", format(cases, big.mark = ","),
"\nCases per mill: ", format(round(cases_per_1e6, 0), big.mark = ",")
)) +
scale_fill_viridis_c(
name = "Cases per million by county",
alpha = 0.5
) +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = "California cases by County")
ggplotly(ca_map,
tooltip = "text"
) %>%
config(displayModeBar = FALSE)
uid
filter(uid, Admin2 == 'Garfield County')
filter(uid, Admin2 == 'Garfield')
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(state == 'Montana' & county != 'Garfield')
us_counties
?%when%
?%within%
?`%within%``
?`%within%`
?`%when%'
?`%when%`
?`%in%`
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield' %in% state == 'Montana')
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield' & state == 'Montana')
us_counties
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield')
us_counties
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield')
us_counties
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield')
us_counties
us_counties <- us_data %>%
group_by(county, state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup() %>%
group_by(county, state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
ungroup() %>%
filter(cases > 0,
county %in% county_filter$county) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
us_counties <- us_data %>%
group_by(county, state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup() %>%
group_by(county, state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
ungroup() %>%
filter(cases > 0,
county %in% county_filter$county) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield')
us_counties
plot_usmap(
data = us_counties,
exclude = "AK",
values = "cases_per_1e6",
color = "black",
size = 0.1) +
ggplot2::aes(text = paste0(
"County: ", county,
"\nPopulation: ", format(population, big.mark = ","),
"\nTotal cases: ", format(cases, big.mark = ","),
"\nCases per mill: ", format(round(cases_per_1e6, 0), big.mark = ",")
)) +
scale_fill_viridis_c(
name = "Cases per million",
alpha = 0.35
) +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = paste0("Cases by County"))
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter_at(vars(state, county), any_vars('Garfield'))
us_counties <- us_data %>%
group_by(county, state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup() %>%
group_by(county, state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
ungroup() %>%
filter(cases > 0,
county %in% county_filter$county) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter_at(vars(state, county), any_vars(str_detect('Garfield')))
us_counties <- us_data %>%
group_by(county, state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup() %>%
group_by(county, state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
ungroup() %>%
filter(cases > 0,
county %in% county_filter$county) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter_at(vars(state, county), any_vars(!str_detect('Garfield')))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
library(shiny)
library(shinydashboard)
library(usmap)
library(ggrepel)
library(plotly)
library(viridis)
library(shinythemes)
theme_set(theme_light())
scale_colour_discrete <- scale_colour_viridis_d
url <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/"
data <- c(
"time_series_covid19_confirmed_global.csv",
"time_series_covid19_deaths_global.csv",
"time_series_covid19_confirmed_US.csv",
"time_series_covid19_deaths_US.csv"
)
urls <- str_c(url, data)
us_confirmed <- read_csv(urls[3]) %>%
pivot_longer(cols = -(UID:Combined_Key), names_to = "date", values_to = "cases") %>%
select(Admin2:cases) %>%
janitor::clean_names() %>%
mutate(date = mdy(date))
us_deaths <- read_csv(urls[4]) %>%
pivot_longer(cols = -(UID:Population), names_to = "date", values_to = "deaths") %>%
select(Admin2:deaths) %>%
janitor::clean_names() %>%
mutate(date = mdy(date))
us_data <- us_deaths %>%
select(deaths, date, combined_key, population) %>%
left_join(us_confirmed, by = c("date", "combined_key")) %>%
select(date, state = province_state, county = admin2, cases, deaths, population, lon = long, lat) %>%
filter(!state %in% c("Diamond Princess", "Grand Princess"))
# get population data
uid_lookup_url <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/UID_ISO_FIPS_LookUp_Table.csv"
uid <- read_csv(uid_lookup_url) %>%
filter(Country_Region == 'US') %>%
select(c(Province_State, Admin2, fips = FIPS))
us_state <- us_data %>%
group_by(state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup()
us_totals <- us_state %>%
group_by(state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
filter(cases > 0) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
county_filter <- tibble(unique(usmap::us_map(regions = "counties")$county)) %>%
select(county = `unique(usmap::us_map(regions = "counties")$county)`) %>%
mutate(county = str_remove_all(county, " County"))
us_counties <- us_data %>%
group_by(county, state, date) %>%
summarize(
cases = sum(cases),
deaths = sum(deaths),
population = sum(population)
) %>%
ungroup() %>%
group_by(county, state) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
ungroup() %>%
filter(cases > 0,
county %in% county_filter$county) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6)) %>%
arrange(desc(cases))
us_counties <- us_counties %>%
left_join(uid, by = c('state' = 'Province_State', 'county' = 'Admin2')) %>%
filter(county != 'Garfield')
library(gganimate)
library(transformr)
us_monthly <- us_state %>%
mutate(month = month(date)) %>%
#  filter(month >= 9) %>%
group_by(state, month) %>%
summarize(
cases = max(cases),
deaths = max(deaths),
population = max(population)
) %>%
filter(cases > 0) %>%
mutate(
deaths_per_1e6 = 1000000 * (deaths / population),
cases_per_1e6 = 1000000 * (cases / population)
) %>%
filter(!is.na(deaths_per_1e6))
p <- plot_usmap(
data = us_monthly,
values = "cases_per_1e6",
color = "black") +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = paste0("Cases by County")) +
scale_fill_viridis_c(
name = "Cases by Month",
alpha = 0.5
)
p <- p + transition_time(as.integer(month)) +
labs(title = "Month: {frame_time}")
animate(p, fps=10,  end_pause = 20)
us_total_sums <- us_data %>%
group_by(date) %>%
summarize(
total_cases = sum(cases),
total_deaths = sum(deaths)
)
daily_summary <- us_data %>%
group_by(state, date) %>%
summarise(
cases_n = sum(cases),
deaths_n = sum(deaths)
) %>%
mutate(
new_cases_n = cases_n - lag(cases_n, default = 0),
new_deaths_n = deaths_n - lag(deaths_n, default = 0)
) %>%
ungroup() %>%
group_by(state) %>%
slice(which.max(date)) %>%
summarise(total_new_cases = sum(new_cases_n),
total_new_death = sum(new_deaths_n)) %>%
ungroup()
# Cases per million by county
county_map <- plot_usmap(
data = us_counties,
exclude = "AK",
values = "cases_per_1e6",
color = "black",
size = 0.1) +
ggplot2::aes(text = paste0(
"County: ", county,
"\nPopulation: ", format(population, big.mark = ","),
"\nTotal cases: ", format(cases, big.mark = ","),
"\nCases per mill: ", format(round(cases_per_1e6, 0), big.mark = ",")
)) +
scale_fill_viridis_c(
name = "Cases per million",
alpha = 0.5
) +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = paste0("Cases by County"))
ggplotly(county_map,
tooltip = "text"
) %>%
config(displayModeBar = FALSE)
ca_map <- plot_usmap(
data = us_counties, values = "cases_per_1e6", include = c("CA"), color = "black",
size = 0.1) +
ggplot2::aes(text = paste0(
"State: ", county,
"\nPopulation: ", format(population, big.mark = ","),
"\nTotal cases: ", format(cases, big.mark = ","),
"\nCases per mill: ", format(round(cases_per_1e6, 0), big.mark = ",")
)) +
scale_fill_viridis_c(
name = "Cases per million by county",
alpha = 0.5
) +
theme(panel.background = element_rect(color = "black", fill = "grey80")) +
theme(legend.position = "right", plot.title = element_text(face = "bold", size = 18, color = "#367588")) +
labs(title = "California cases by County")
ggplotly(ca_map,
tooltip = "text"
) %>%
config(displayModeBar = FALSE)
blogdown::stop_server()
blogdown::serve_site()
ca_map <- plot_usmap(
data = us_counties, values = "cases_per_1e6", include = c("Santa Cruz"), color = "black",
size = 0.1)
plot_usmap(
data = us_counties, values = "cases_per_1e6", include = c("Santa Cruz"), color = "black",
size = 0.1)
plot_usmap(
data = us_counties, values = "cases_per_1e6", include = c("Santa Cruz"), color = "black",
size = 0.1)
plot_usmap(
data = us_counties, values = "cases_per_1e6", include = c("CA", "Santa Cruz"), color = "black",
size = 0.1)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
